Data management information (data.txt) which describes the exact type of DB,
the version and the DB connection address if it is on the cloud with authorisationinformation and 
any other necessary information.

the database used for this project is phpMyAdmin

phpMyAdmin version information: 5.0.3
MySQL version 5.7

the plugins used for the storage Schema: 

InnoDB version 10.3 by Oracle Corporation to Support transactions, row-level locking, foreign keys and encryption for tables.
Aria version 1.5 by Monty Program Ab for Crash-safe tables with MyISAM heritage.	
binlog version 	1.0 by MySQL AB for pseudo storage engine to represent the binlog in a transaction.
CSV version 1.0 by Brian Aker, MySQL AB for Storeing tables as CSV files.
MEMORY version 1.0 by MySQL AB for Hash based, stored in memory, useful for temporary tables.
MRG_MyISAM version 1.0 by MySQL AB for collection of identical MyISAM tables.
MyISAM version 1.0 by MySQL AB for Non-transactional engine with good performance and small data footprint.
partition version 1.0 by Mikael Ronstrom, MySQL ABPartition Storage Engine Helper.
PERFORMANCE_SCHEMA version 0.1 by Marc Alff, Oracle for the Schema Performance.
SEQUENCE version 1.0 by	Sergei Golubchik for Generated tables filled with sequential values.
SQL_SEQUENCE version 1.0 by jianwei.zhao @ Aliyun & Monty @ MariaDB corp for the sequence Storage Engine for CREATE SEQUENCE.
wsrep version 1.0 by Codership Oy for the pseudo storage engine to represent transactions in multi-master synchornous replication.

for the authentication the database uses the following plugins:
mysql_native_password version 1.0 by R.J.Silk, Sergei Golubchikfor for Native MySQL authentication.
mysql_old_password version 1.0 by R.J.Silk, Sergei Golubchikfor	for Old MySQL-4.0 authentication.
unix_socket	Unix version 1.0 by Sergei Golubchikfor for Socket based authentication.	

the sql queries for creating the database tables: 

CREATE TABLE Supplier ( 
    `OrganisationName` VARCHAR(200), 
    `ContactName` VARCHAR(100), 
    `PositionTitle` VARCHAR(100), 
    `NoOfEmployees` INT(100), 
    `ABNNo` INT(11), 
    `ContactEmail` VARCHAR(100), 
    `Mobile` VARCHAR(15) NULL , 
    `Telephone` VARCHAR(15), 
    `HeadOfficeAddress` VARCHAR(200), 
    `AverageOfYearlyCert` INT(10), 
    `NoOfPhysicalLocationsInAus` INT(10), 
    `NoOfPhysicalLocationsOutAus` INT(10), 
    `CertificationsProvided` VARCHAR(200), 
    `AdditionalServices` VARCHAR(100), 
    `Verified` ENUM('Yes','No'), 
    `LoginEmail` VARCHAR(100), 
    `Password` VARCHAR(100),
    PRIMARY KEY (ABNNo)
);

CREATE TABLE Buyer ( 
    `OrganisationName` VARCHAR(200), 
    `ContactName` VARCHAR(100), 
    `PositionTitle` VARCHAR(100), 
    `NoOfEmployees` INT(100),
    `HeadOfficeAddress` VARCHAR(200), 
    `ABNNo` INT(11),     
    `NoOfPhysicalLocationsInAus` INT(10), 
    `NoOfPhysicalLocationsOutAus` INT(10), 
    `Mobile` VARCHAR(15) NULL, 
    `Telephone` VARCHAR(15), 
    `ContactEmail` VARCHAR(100), 
    `Date` Date, 
    `AddressRequired` VARCHAR(200),
    `ServicesRequired` VARCHAR(200),
    `CurrentStatus` VARCHAR(10),  
    `AdditionalServices` VARCHAR(50), 
    `Urgent` VARCHAR(3), 
    `Verified` ENUM('Yes','No'), 
    `TimeStamp` TIMESTAMP,
);